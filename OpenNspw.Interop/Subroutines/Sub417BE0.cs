// Code generated by: https://github.com/OpenNSPW/Disassembler

using Aigamo.Enzan;

namespace OpenNspw.Interop.Subroutines
{
	// pt_in_rect3
	internal static class Sub417BE0
	{
		public static void Call(Emulator emulator)
		{
			emulator.Cpu.Eax = emulator.Cpu.Mov(emulator.Memory32[emulator.Cpu.Esp + new Register32(0x00000004/*4*/)]);
			emulator.Cpu.Ecx = emulator.Cpu.Mov(emulator.Memory32[emulator.Cpu.Esp + new Register32(0x0000000C/*12*/)]);
			emulator.Cpu.Cmp(emulator.Memory32[emulator.Cpu.Eax + new Register32(0x00000004/*4*/)], emulator.Cpu.Ecx);
			if (emulator.Cpu.Jg) goto loc_417C07;
			emulator.Cpu.Cmp(emulator.Memory32[emulator.Cpu.Eax + new Register32(0x0000000C/*12*/)], emulator.Cpu.Ecx);
			if (emulator.Cpu.Jl) goto loc_417C07;
			emulator.Cpu.Ecx = emulator.Cpu.Mov(emulator.Memory32[emulator.Cpu.Esp + new Register32(0x00000008/*8*/)]);
			emulator.Cpu.Edx = emulator.Cpu.Mov(emulator.Memory32[emulator.Cpu.Eax + new Register32(0x00000008/*8*/)]);
			emulator.Cpu.Cmp(emulator.Cpu.Edx, emulator.Cpu.Ecx);
			if (emulator.Cpu.Jl) goto loc_417C07;
			emulator.Cpu.Cmp(emulator.Memory32[emulator.Cpu.Eax], emulator.Cpu.Ecx);
			if (emulator.Cpu.Jg) goto loc_417C07;
			emulator.Cpu.Eax = emulator.Cpu.Mov(new Register32(0x00000001/*1*/));
			return;

			loc_417C07:
			emulator.Cpu.Eax = emulator.Cpu.Xor(emulator.Cpu.Eax, emulator.Cpu.Eax);
			return;

		}
	}
}