// Code generated by: https://github.com/OpenNSPW/Disassembler

using Aigamo.Enzan;

namespace OpenNspw.Interop.Subroutines
{
	// sub_403A70
	internal static class Sub403A70
	{
		public static void Call(Emulator emulator)
		{
			emulator.Cpu.Ecx = emulator.Cpu.Mov(emulator.Memory32[emulator.Cpu.Esp + new Register32(0x00000008/*8*/)]);
			emulator.Cpu.Edx = emulator.Cpu.Mov(emulator.Memory32[emulator.Cpu.Esp + new Register32(0x00000004/*4*/)]);
			emulator.Cpu.Push(emulator.Cpu.Esi);
			emulator.Cpu.Eax = emulator.Cpu.Lea(emulator.Cpu.Ecx + emulator.Cpu.Ecx * new Register32(2));
			emulator.Cpu.Esi = emulator.Cpu.Lea(emulator.Cpu.Edx + emulator.Cpu.Edx * new Register32(4));
			emulator.Cpu.Eax = emulator.Cpu.Shl(emulator.Cpu.Eax, new Register8(0x04/*4*/));
			emulator.Cpu.Eax = emulator.Cpu.Add(emulator.Cpu.Eax, emulator.Cpu.Ecx);
			emulator.Cpu.Esi = emulator.Cpu.Lea(emulator.Cpu.Esi + emulator.Cpu.Esi * new Register32(8));
			emulator.Cpu.Esi = emulator.Cpu.Shl(emulator.Cpu.Esi, new Register8(0x02/*2*/));
			emulator.Cpu.Eax = emulator.Cpu.Lea(emulator.Cpu.Eax + emulator.Cpu.Eax * new Register32(2));
			emulator.Cpu.Esi = emulator.Cpu.Sub(emulator.Cpu.Esi, emulator.Cpu.Edx);
			emulator.Cpu.Eax = emulator.Cpu.Shl(emulator.Cpu.Eax, new Register8(0x03/*3*/));
			emulator.Cpu.Esi = emulator.Cpu.Mov(emulator.Memory32[emulator.Cpu.Esi * new Register32(8) + new Register32(0x004916C8/*4789960*/)]);
			emulator.Cpu.Edx = emulator.Cpu.Movsx(emulator.Memory16[emulator.Cpu.Eax + new Register32(0x004867A2/*4745122*/)]);
			emulator.Cpu.Cmp(emulator.Cpu.Esi, emulator.Cpu.Edx);
			if (emulator.Cpu.Jne) goto loc_403AAB;

			loc_403AA4:
			emulator.Cpu.Eax = emulator.Cpu.Mov(new Register32(0x00000001/*1*/));
			emulator.Cpu.Esi = emulator.Cpu.Pop32();
			return;

			loc_403AAB:
			emulator.Cpu.Edx = emulator.Cpu.Lea(emulator.Cpu.Ecx + emulator.Cpu.Ecx * new Register32(2));
			emulator.Cpu.Edx = emulator.Cpu.Shl(emulator.Cpu.Edx, new Register8(0x04/*4*/));
			emulator.Cpu.Edx = emulator.Cpu.Add(emulator.Cpu.Edx, emulator.Cpu.Ecx);
			emulator.Cpu.Ecx = emulator.Cpu.Lea(emulator.Cpu.Edx + emulator.Cpu.Edx * new Register32(2));
			emulator.Cpu.Cx = emulator.Cpu.Mov(emulator.Memory16[emulator.Cpu.Ecx * new Register32(8) + new Register32(0x00486BF0/*4746224*/)]);
			emulator.Cpu.Test(emulator.Cpu.Cx, emulator.Cpu.Cx);
			if (emulator.Cpu.Je) goto loc_403ADC;
			emulator.Cpu.Eax = emulator.Cpu.Lea(emulator.Cpu.Eax + new Register32(0x00486BF0/*4746224*/));

			loc_403AC9:
			emulator.Cpu.Edx = emulator.Cpu.Movsx(emulator.Cpu.Cx);
			emulator.Cpu.Cmp(emulator.Cpu.Esi, emulator.Cpu.Edx);
			if (emulator.Cpu.Je) goto loc_403AA4;
			emulator.Cpu.Cx = emulator.Cpu.Mov(emulator.Memory16[emulator.Cpu.Eax + new Register32(0x00000002/*2*/)]);
			emulator.Cpu.Eax = emulator.Cpu.Add(emulator.Cpu.Eax, new Register8(0x02/*2*/));
			emulator.Cpu.Test(emulator.Cpu.Cx, emulator.Cpu.Cx);
			if (emulator.Cpu.Jne) goto loc_403AC9;

			loc_403ADC:
			emulator.Cpu.Eax = emulator.Cpu.Xor(emulator.Cpu.Eax, emulator.Cpu.Eax);
			emulator.Cpu.Esi = emulator.Cpu.Pop32();
			return;

		}
	}
}