// Code generated by: https://github.com/OpenNSPW/Disassembler

using Aigamo.Enzan;

namespace OpenNspw.Interop.Subroutines
{
	// sub_414DD0
	internal static class Sub414DD0
	{
		public static void Call(Emulator emulator)
		{
			emulator.Cpu.Push(emulator.Cpu.Ebp);
			emulator.Cpu.Ebp = emulator.Cpu.Mov(emulator.Cpu.Esp);
			emulator.Cpu.Esp = emulator.Cpu.And(emulator.Cpu.Esp, new Register8(0xF8/*-8*/));
			emulator.Cpu.Esp = emulator.Cpu.Sub(emulator.Cpu.Esp, new Register8(0x14/*20*/));
			emulator.Cpu.Eax = emulator.Cpu.Mov(new Register32(0x00000001/*1*/));
			emulator.Cpu.Push(emulator.Cpu.Ebx);
			emulator.Cpu.Cmp(emulator.Memory16[new Register32(0x00443A90/*4471440*/)], emulator.Cpu.Ax);
			emulator.Cpu.Push(emulator.Cpu.Esi);
			emulator.Cpu.Push(emulator.Cpu.Edi);
			emulator.Memory32[emulator.Cpu.Esp + new Register32(0x0000000C/*12*/)] = emulator.Cpu.Mov(emulator.Cpu.Eax);
			if (emulator.Cpu.Jl) goto loc_414EB7;

			loc_414DF2:
			emulator.Cpu.Esi = emulator.Cpu.Lea(emulator.Cpu.Eax + emulator.Cpu.Eax * new Register32(4));
			emulator.Cpu.Esi = emulator.Cpu.Lea(emulator.Cpu.Esi + emulator.Cpu.Esi * new Register32(8));
			emulator.Cpu.Esi = emulator.Cpu.Shl(emulator.Cpu.Esi, new Register8(0x02/*2*/));
			emulator.Cpu.Esi = emulator.Cpu.Sub(emulator.Cpu.Esi, emulator.Cpu.Eax);
			emulator.Cpu.Esi = emulator.Cpu.Shl(emulator.Cpu.Esi, new Register8(0x03/*3*/));
			emulator.Cpu.Cmp(emulator.Memory16[emulator.Cpu.Esi + new Register32(0x004916A0/*4789920*/)], new Register8(0x00/*0*/));
			if (emulator.Cpu.Je) goto loc_414EA3;
			emulator.Cpu.Cmp(emulator.Memory32[emulator.Cpu.Esi + new Register32(0x004916B8/*4789944*/)], new Register8(0x01/*1*/));
			if (emulator.Cpu.Jne) goto loc_414EA3;
			emulator.Cpu.Fld(emulator.Memory64[emulator.Cpu.Esi + new Register32(0x004916B0/*4789936*/)]);
			emulator.Cpu.Call(new Register32(0x004360C4/*4415684*/));
			emulator.Cpu.Ebx = emulator.Cpu.Mov(emulator.Cpu.Eax);
			emulator.Cpu.Eax = emulator.Cpu.Mov(emulator.Memory32[new Register32(0x0048A240/*4760128*/)]);
			emulator.Cpu.Cdq();
			emulator.Cpu.Fld(emulator.Memory64[emulator.Cpu.Esi + new Register32(0x004916A8/*4789928*/)]);
			emulator.Cpu.Eax = emulator.Cpu.Sub(emulator.Cpu.Eax, emulator.Cpu.Edx);
			emulator.Cpu.Edi = emulator.Cpu.Mov(emulator.Cpu.Eax);
			emulator.Cpu.Eax = emulator.Cpu.Mov(emulator.Cpu.Ebx);
			emulator.Cpu.Edi = emulator.Cpu.Sar(emulator.Cpu.Edi, new Register8(1));
			emulator.Cpu.Eax = emulator.Cpu.Sub(emulator.Cpu.Eax, emulator.Cpu.Edi);
			emulator.Memory32[emulator.Cpu.Esp + new Register32(0x00000014/*20*/)] = emulator.Cpu.Mov(emulator.Cpu.Eax);
			emulator.Cpu.Call(new Register32(0x004360C4/*4415684*/));
			emulator.Cpu.Ecx = emulator.Cpu.Mov(emulator.Cpu.Eax);
			emulator.Cpu.Eax = emulator.Cpu.Mov(emulator.Memory32[new Register32(0x0048A23C/*4760124*/)]);
			emulator.Cpu.Esi = emulator.Cpu.Mov(emulator.Memory32[emulator.Cpu.Ebp + new Register32(0x0000000C/*12*/)]);
			emulator.Cpu.Edi = emulator.Cpu.Add(emulator.Cpu.Edi, emulator.Cpu.Ebx);
			emulator.Cpu.Cdq();
			emulator.Cpu.Fld(emulator.Memory64[emulator.Cpu.Esi]);
			emulator.Cpu.Eax = emulator.Cpu.Sub(emulator.Cpu.Eax, emulator.Cpu.Edx);
			emulator.Memory32[emulator.Cpu.Esp + new Register32(0x0000001C/*28*/)] = emulator.Cpu.Mov(emulator.Cpu.Edi);
			emulator.Cpu.Eax = emulator.Cpu.Sar(emulator.Cpu.Eax, new Register8(1));
			emulator.Cpu.Edx = emulator.Cpu.Lea(emulator.Cpu.Eax + emulator.Cpu.Ecx * new Register32(1));
			emulator.Cpu.Ecx = emulator.Cpu.Sub(emulator.Cpu.Ecx, emulator.Cpu.Eax);
			emulator.Memory32[emulator.Cpu.Esp + new Register32(0x00000018/*24*/)] = emulator.Cpu.Mov(emulator.Cpu.Edx);
			emulator.Memory32[emulator.Cpu.Esp + new Register32(0x00000010/*16*/)] = emulator.Cpu.Mov(emulator.Cpu.Ecx);
			emulator.Cpu.Call(new Register32(0x004360C4/*4415684*/));
			emulator.Cpu.Push(emulator.Cpu.Eax);
			emulator.Cpu.Eax = emulator.Cpu.Mov(emulator.Memory32[emulator.Cpu.Ebp + new Register32(0x00000008/*8*/)]);
			emulator.Cpu.Fld(emulator.Memory64[emulator.Cpu.Eax]);
			emulator.Cpu.Call(new Register32(0x004360C4/*4415684*/));
			emulator.Cpu.Ecx = emulator.Cpu.Lea(emulator.Cpu.Esp + new Register32(0x00000014/*20*/));
			emulator.Cpu.Push(emulator.Cpu.Eax);
			emulator.Cpu.Push(emulator.Cpu.Ecx);
			emulator.Cpu.Call(new Register32(0x00417BE0/*4291552*/));
			emulator.Cpu.Esp = emulator.Cpu.Add(emulator.Cpu.Esp, new Register8(0x0C/*12*/));
			emulator.Cpu.Test(emulator.Cpu.Eax, emulator.Cpu.Eax);
			if (emulator.Cpu.Je) goto loc_414E9F;
			emulator.Cpu.Fld(emulator.Memory64[emulator.Cpu.Esi]);
			emulator.Cpu.Fpu.Stack[0] = emulator.Cpu.Fsub(emulator.Cpu.Fpu.Stack[0], new Register64(0x4054000000000000)/*80*/);
			emulator.Memory32[emulator.Cpu.Esp + new Register32(0x0000000C/*12*/)] = emulator.Cpu.Mov(new Register32(0x00000000/*0*/));
			emulator.Memory64[emulator.Cpu.Esi] = emulator.Cpu.Fst(emulator.Cpu.Fpu.Stack[0]);
			emulator.Cpu.Fpu.Stack.Pop();

			loc_414E9F:
			emulator.Cpu.Eax = emulator.Cpu.Mov(emulator.Memory32[emulator.Cpu.Esp + new Register32(0x0000000C/*12*/)]);

			loc_414EA3:
			emulator.Cpu.Edx = emulator.Cpu.Movsx(emulator.Memory16[new Register32(0x00443A90/*4471440*/)]);
			emulator.Cpu.Eax = emulator.Cpu.Inc(emulator.Cpu.Eax);
			emulator.Cpu.Cmp(emulator.Cpu.Eax, emulator.Cpu.Edx);
			emulator.Memory32[emulator.Cpu.Esp + new Register32(0x0000000C/*12*/)] = emulator.Cpu.Mov(emulator.Cpu.Eax);
			if (emulator.Cpu.Jle) goto loc_414DF2;

			loc_414EB7:
			emulator.Cpu.Edi = emulator.Cpu.Pop32();
			emulator.Cpu.Esi = emulator.Cpu.Pop32();
			emulator.Cpu.Ebx = emulator.Cpu.Pop32();
			emulator.Cpu.Esp = emulator.Cpu.Mov(emulator.Cpu.Ebp);
			emulator.Cpu.Ebp = emulator.Cpu.Pop32();
			return;

		}
	}
}